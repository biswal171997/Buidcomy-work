@{
    ViewData["Title"] = "New tender";
}


<div class="modal fade right custom-view-modal-medium" id="addCorrigendum" tabindex="-1">
    <div class="modal-dialog modal-xl custom-modal modal-dialog-scrollable">
        @Html.Partial("_AddTenderCorrigendum.cshtml")
    </div>
</div>
<div class="modal fade right custom-view-modal-medium" id="searchFilter">
    <div class="modal-dialog modal-lg custom-modal modal-dialog-scrollable">
        @Html.Partial("~/Views/Home/_SearchFilter.cshtml")
    </div>
</div>
<div class="page-body">
    <!-- breadcrumb section -->
    <div class="d-flex align-items-center justify-content-between mb-4 flex-wrap gap-3">
        <nav aria-label="breadcrumb">
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="#!" title="Home"><i class="bi bi-house"></i></a></li>
                <li class="breadcrumb-item"><a href="#!" title="Tender"> Tender </a></li>
                <li class="breadcrumb-item active" title="New tender" aria-current="page"> New tender </li>
            </ul>
        </nav>
        <div class="col-right">
            <button type="button" class="btn btn-primary btn-sm me-3" onclick="Reset()" title="Add" data-bs-toggle="modal"
                    data-bs-target="#addTenders">
                <i class="bi bi-plus-circle me-1"></i> Add
            </button>
            <button type="button" class="btn btn-primary btn-sm" title="Filter" data-bs-toggle="modal"
                    data-bs-target="#searchFilter">
                <i class="buidcoicon-filter"></i>
            </button>
            @*<button type="button" class="btn btn-outline-success btn-sm" title="Excel" data-bs-toggle="tooltip">
                <i class="buidcoicon-excel"></i>
            </button>
            <button type="button" class="btn btn-outline-primary btn-sm" title="Print Preview"
                    data-bs-toggle="tooltip">
                <i class="bi bi-printer"></i>
            </button>*@
        </div>
    </div>
    <!-- breadcrumb section -->
    <!-- inner body section -->
    <div class="body__content">
        <div class="body__bg">
            <div class="table-responsive">
                <table class="table table-striped datatable" id="tabledata">
                    @*id="basic-2"*@
                    <thead>
                        <tr>
                            <th width="4%"> Sl# </th>
                            <th width="33%"> Project Details </th>
                            <th width="22%"> Tender Details </th>
                            <th width="10%" class="text-center"> Corrigendum </th>
                            <th width="10%" class="text-center"> Addendum </th>
                            <th width="12%"> Status </th>
                            <th width="10%"> Action </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <!-- inner body section -->
    <!-- add tender Modal -->
    <div class="modal fade right custom-view-modal-medium" id="addTenders">
        <div class="modal-dialog modal-lg custom-modal modal-dialog-scrollable">
            @Html.Partial("_AddTender.cshtml")
        </div>
    </div>
    <!-- add tender Modal -->
    <!-- add corrigendum Modal -->
    <!-- add corrigendum Modal -->
    <!-- view corrigendum Modal -->
    <div class="modal fade right custom-view-modal-medium" id="viewCorrigendum">
        <div class="modal-dialog modal-xl custom-modal modal-dialog-scrollable">
            @Html.Partial("_ViewTenderCorrigendum.cshtml")
        </div>
    </div>
    <!-- view corrigendum Modal -->
    <!-- search filter Modal -->
    
</div>
@*<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>*@
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
<input type="hidden" id="hdnProjectId" />
<input type="hidden" id="hdntenderId" />
<input type="hidden" id="hdncorrendum_List" />
<script>
    $(document).ready(function () {
        Get_Project_Tender();
        $(".datepicker").datepicker({
            dateFormat: 'dd-M-yy'
        }).on('keydown', function (event) {
            event.preventDefault();
        });

        $(".decimal-input").on("keypress", function (event) {
            var value = $(this).val();
            var key = String.fromCharCode(event.which);
            if (!/[\d.]/.test(key) || (key === "." && value.includes("."))) {
                event.preventDefault();
                return false;
            }
            var newValue = value + key;
            if (newValue.includes(".") && newValue.split(".")[1].length > 2) {
                event.preventDefault();
                return false;
            }
        });
        $(".decimal-input").on("input", function () {
            var value = $(this).val();
            value = value.replace(/[^0-9.]/g, "");
            var parts = value.split(".");
            if (parts.length > 2) {
                value = parts[0] + "." + parts.slice(1).join("");
            }
            if (parts.length === 2) {
                value = parts[0] + "." + parts[1].substring(0, 2);
            }
            $(this).val(value);
        });
        $('.file').bind('change', function () {
            filesize = this.files[0].size;
            var val = $(this).val().toLowerCase();
            var label = $(this).siblings('.custom-file-label');
            regex = new RegExp("(.*?)\.(pdf)$");
            if (!(regex.test(val))) {
                /* swal("", capitalizeString(".docx, .tif,.xls  type is not an allowed file type. You can use only .jpg, .jpeg, .png, .pdf types of file(s). "), "warning");*/
                // alert("Allow only .pdf file");
                Swal.fire("Invalid File!","Only pdf files are allow.","error")
                this.value = '';
                label.html('Choose files');
                return false;
                $(".file").find(".is-valid, .is-invalid").removeClass("is-valid is-invalid");
                $(".file").find(".error").removeClass("error");
                $(".file")[0].reset();
            }
            else if (filesize > 10485760) {
                //alert("File size must less than 10 MB!");
                Swal.fire("Invalid File!", "File size must less than 10 MB.", "error")
                this.value = '';
                label.html('Choose files');
                return false;
            }
            else {
                var fileName = $(this).val().split("\\").pop();
                $(this).next('.custom-file-label').html(fileName);
                $(this).next('.lblfilename5').html(fileName);
            }
            return false;
        });
        $("#AddTenderform").validate({
            rules: {
                projectId: { required: true },
                tenderNo: { required: true },
                tenderSubject: {required: true },
                publishedDate: { required: true },
                openingDate: { required: true },
                submissionDate: { required: true },
                emdAmount: {   required: true },
                processingFee: { required: true },
                nitDocFileName: {
                    required: function () {
                       return $('.hdnNITFile').val() == "";
                    }
                },
            },
            messages: {
                projectId: {
                    required: "Please Select Project Name/ID!"
                },
                tenderNo: {
                    required: "Please enter Tender Number!"
                },
                tenderSubject: {
                    required: "Please enter Tender Subject!"
                },
                publishedDate: {
                    required: "Please Select Tender Published Date!"
                },
                openingDate: {
                    required: "Please select Opening Date!"
                },
                submissionDate: {
                    required: "Please select Submission Date!"
                },
                emdAmount: {
                    required: "Please enter EMD Amount!"
                },
                processingFee: {
                    required: "Please enter Processing Fee!"
                },
                nitDocFileName: {
                    required: "Please Upload NIT Document!"
                },
            },
            errorPlacement: function (error, element) {
                error.css("color", "red");
                error.insertAfter(element.closest(".form-group"));
            },
            highlight: function (element) {
                $(element).removeClass("is-valid")
                $(element).parent().addClass('error')
                $(element).addClass("is-invalid")
            },
            unhighlight: function (element) {
                $(element).parent().removeClass('error')
                $(element).removeClass("is-invalid");
                $(element).addClass("is-valid")
            }
        });


        $("#formCorrigendum_Addendum").validate({
            rules: {
                corrigendumDate: { required: true },
                approveBy: { required: true },
                corrigendumFileName: {
                    required: function () {
                        return $("#hdncorrigendumFileName").val() == "";
                    }
                }
            },
            messages: {
                corrigendumDate: {
                    required: "Please select Date of Corrigendum!"
                },
                approveBy: {
                    required: "Please select Approved By!"
                },
                corrigendumFileName: {
                    required: "Please Upload Document!"
                },
            },
            errorPlacement: function (error, element) {
                error.css("color", "red");
                error.insertAfter(element.closest(".form-group"));
            },
            highlight: function (element) {
                $(element).removeClass("is-valid")
                $(element).parent().addClass('error')
                $(element).addClass("is-invalid")
            },
            unhighlight: function (element) {
                $(element).parent().removeClass('error')
                $(element).removeClass("is-invalid");
                $(element).addClass("is-valid")
            }
        });

        $("#formMoreCorrigendum").validate({
            rules: {
                referenceNumberId: { required: true },
                descchangeId: { required: true }
            },
            messages: {
                referenceNumberId: {
                    required: "Please enter Reference Number of RFP/NIT!"
                },
                descchangeId: {
                    required: "Please enter Description of Changes!"
                },
            },
            errorPlacement: function (error, element) {
                error.css("color", "red");
                error.insertAfter(element.closest(".form-group"));
            },
            highlight: function (element) {
                $(element).removeClass("is-valid")
                $(element).parent().addClass('error')
                $(element).addClass("is-invalid")
            },
            unhighlight: function (element) {
                $(element).parent().removeClass('error')
                $(element).removeClass("is-invalid");
                $(element).addClass("is-valid")
            }
        });

        // Charecter Count
        function updateCharCount(textArea) {
            var maxLength = $(textArea).attr("maxlength");
            var currentLength = $(textArea).val().length;
            var remaining = maxLength - currentLength;

            var spanId = $(textArea).attr("targetid");
            $('#' + spanId).text(remaining);

            if (remaining < 0) {
               // alert("You have reached your maximum limit of characters allowed.");
                Swal.fire("","You have reached your maximum limit of characters allowed.","error")
                $(textArea).val($(textArea).val().substring(0, maxLength));
                $('#' + spanId).text(0);
            }
        }
        $(document).on('keyup', '.LengthRemarks', function () {
            updateCharCount(this);
        });
        $(document).on('blur', '.LengthRemarks', function () {
            updateCharCount(this);
        });
        // End Charecter Count
        $('#sectionPopUp').hide();
        $('#tblcorrendum').hide();
    });
    function Reset() {
        if ($('#DynamicButton').text() == "Reset") {
            $('#sectionPopUp').hide();
            $('.hdnNITFile').val('')
            $('.Nitfile').text('');
            $('.LengthRemarks').trigger('blur');
            $("#projectId").prop("readonly", false).css("cursor", "text");
            $("#AddTenderform").validate().resetForm();
            $("#AddTenderform").find(".is-valid, .is-invalid").removeClass("is-valid is-invalid");
            $("#AddTenderform").find(".error").removeClass("error");
            $("#AddTenderform")[0].reset();

            $("#formMoreCorrigendum").validate().resetForm();
            $("#formMoreCorrigendum").find(".is-valid, .is-invalid").removeClass("is-valid is-invalid");
            $("#formMoreCorrigendum").find(".error").removeClass("error");
            $("#formMoreCorrigendum")[0].reset();

            $("#formCorrigendum_Addendum").validate().resetForm();
            $("#formCorrigendum_Addendum").find(".is-valid, .is-invalid").removeClass("is-valid is-invalid");
            $("#formCorrigendum_Addendum").find(".error").removeClass("error");
            $("#formCorrigendum_Addendum")[0].reset();

            $('#DynamicButton').text("Reset");
            $("#subaddData").text("Submit");
        } else {
            $("#addTenders").modal("hide");
            $('#sectionPopUp').hide();
            $("#projectId").prop("readonly", false).css("cursor", "text");
            $("#AddTenderform").validate().resetForm();
            $("#AddTenderform").find(".is-valid, .is-invalid").removeClass("is-valid is-invalid");
            $("#AddTenderform").find(".error").removeClass("error");
            $("#AddTenderform")[0].reset();

            $("#formMoreCorrigendum").validate().resetForm();
            $("#formMoreCorrigendum").find(".is-valid, .is-invalid").removeClass("is-valid is-invalid");
            $("#formMoreCorrigendum").find(".error").removeClass("error");
            $("#formMoreCorrigendum")[0].reset();

            $("#formCorrigendum_Addendum").validate().resetForm();
            $("#formCorrigendum_Addendum").find(".is-valid, .is-invalid").removeClass("is-valid is-invalid");
            $("#formCorrigendum_Addendum").find(".error").removeClass("error");
            $("#formCorrigendum_Addendum")[0].reset();
            $('.hdnNITFile').val('')
            $('.Nitfile').text('');
            $('#DynamicButton').text("Reset");
            $("#subaddData").text("Submit");

        }
    }
   
    $(".autocomplete").autocomplete({
    source: function (request, response) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProjectName","Tender")',
            data: JSON.stringify(request.term),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                console.log(data);
                if (!data || data.length === 0 || data.message === "No record found") {
                    response([{ label: "No record found", value: "" }]); // Show message
                } else {
                    response($.map(data, function (item) {
                        return {
                            label: item.projectName || item.projectCode,
                            value: item.projectId
                        };
                    }));
                }
            },
            error: function () {
                response([]);
            }
        });
    },
    minLength: 3,
    focus: function (event, ui) {
        if (ui.item.label === "No record found") {
            event.preventDefault(); // Prevent selection
        } else {
            $("#projectId").val(ui.item.label);
        }
        return false;
    },
    select: function (event, ui) {
        if (ui.item.label === "No record found") {
            event.preventDefault(); // Prevent selection
            $("#projectId").val(""); // Clear TextBox Value
            $("#projectId").attr("placeholder", "Record Not Found"); // Set Placeholder
            $("#hiddenProjectId").val(""); // Reset Hidden Value
        } else {
            $("#projectId").val(ui.item.label);
            $("#hiddenProjectId").val(ui.item.value);
        }
        return false;
    }
});
    function GetProjectDetails(Id,TenderId ,Add) {
        var ProjectId;
        $('#hdnProjectId').val(Id);
        $('#hdntenderId').val(TenderId);

        if (Id > 0) {
            ProjectId = Id;
        } else {
            ProjectId = $('#hiddenProjectId').val();
        }
        if (ProjectId !== "" && ProjectId != undefined) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetProjectDetailsById", "Tender")',
                data: { 'PId': ProjectId },
                dataType: "json",
                traditional: true,
                success: function (data) {
                    if (Add == "AddCor") {
                        Reset();
                        $('.dynamicheader').text("Add Corrigendum");
                        $(".projectNameID").prop("readonly", true).css("cursor", "not-allowed");
                        $('.Dynamiclabel').text("Date of Corrigendum");
                        $('#hideshowcorrigendum').show();
                        $('#hideshowAddendum').hide();
                        $("#addenum").prop("checked", false).prop("disabled", true).css("cursor", "not-allowed");
                        $("#corrigen").prop("checked", true);
                        $('.projectNameID').val(data.projectName + "/" + data.projectCode);
                        $('.Startdateid').text(data.createdOn);
                        $('.projectDescId').text(data.projectName);
                        $('.ConstrId').text(data.constructionArea);
                        $('.LenthId').text(data.length);
                        $('.Estimated').text("₹" + data.projectAmount);
                        $("#DynamicBtn").text("Cancel");
                        $("#subaddData").text("Update");
                        $('#sectionAddCor').show();
                        GetUserName();

                        //$('.projectNameID').val(data.projectNameID);
                    } else if (Add == "Addendum") {
                        Reset();
                        $('.dynamicheader').text("Add Addendum");
                        $('.Dynamiclabel').text("Date of Addendum");
                        $("#corrigen").prop("disabled", true).css("cursor", "not-allowed");
                        $("#corrigen").prop("checked", false).prop("disabled", true).css("cursor", "not-allowed");
                        $("#addenum").prop("checked", true);
                        $('.projectNameID').val(data.projectName + "/" + data.projectCode);
                        $('.Startdateid').text(data.createdOn);
                        $('.projectDescId').text(data.projectName);
                        $('.ConstrId').text(data.constructionArea);
                        $('.LenthId').text(data.length);
                        $('.Estimated').text("₹" + data.projectAmount);
                        $("#DynamicBtn").text("Cancel");
                        $("#subaddData").text("Update");
                        GetUserName();

                    } else {
                        $('.Startdateid').text(data.createdOn);
                        $('.projectDescId').text(data.projectName);
                        $('.ConstrId').text(data.constructionArea);
                        $('.LenthId').text(data.length);
                        $('.Estimated').text("₹" + data.projectAmount);
                        $('#sectionPopUp').show();
                    }

                }
            });
        } else {
            $('#sectionPopUp').hide();
        }
 }

    function RemoveWhiteSpace(e) {
        e.value = $.trim(e.value);
    }
    function AllowAlphaNumeric(event) {
        var keyCode = event.which || event.keyCode;
        var allowedKeyCodes = [...Array(10).keys()].map(i => i + 48) // 0-9
            .concat([...Array(26).keys()].map(i => i + 65)) // A-Z
            .concat([...Array(26).keys()].map(i => i + 97)) // a-z
            .concat([58, 45,92, 47, 32]); // ., ,, :, -, (, ), \, / space
        if (allowedKeyCodes.indexOf(keyCode) === -1) {
            event.preventDefault();
        }
    }
    function lettersDigitValidateRemarks(event) {
        var keyCode = event.which || event.keyCode;
        var allowedKeyCodes = [...Array(10).keys()].map(i => i + 48) // 0-9
            .concat([...Array(26).keys()].map(i => i + 65)) // A-Z
            .concat([...Array(26).keys()].map(i => i + 97)) // a-z
            .concat([46, 44, 58, 45, 40, 41, 92, 47, 32]); // ., ,, :, -, (, ), \, / space
        if (allowedKeyCodes.indexOf(keyCode) === -1) {
            event.preventDefault();
        }
    }
    function Save_M_Project_Tender() {
        if ($("#AddTenderform").valid()) {
        var formData = new FormData();
         var fileInput = $("#nitDocFileName")[0].files[0];
         var HdnTenderId = $('#HdnTenderId').val();

        formData.append("tenderId", HdnTenderId||0);
        formData.append("projectId", $('#hiddenProjectId').val()|| 0);
        formData.append("tenderNo", $("#tenderNo").val());
        formData.append("tenderSubject", $("#tenderSubject").val());
        formData.append("publishedDate", $("#publishedDate").val());
        formData.append("openingDate", $("#openingDate").val());
        formData.append("submissionDate", $("#submissionDate").val());
        formData.append("emdAmount", $("#emdAmount").val());
        formData.append("processingFee", $("#processingFee").val());

        // Append the file correctly
        if (fileInput) {
            formData.append("nitDocpathFile", fileInput);
        }
            var tendersubject = $("#tenderSubject").val() || null;
           let dynamicMsg;
            if (HdnTenderId == 0 || HdnTenderId == null) {
                dynamicMsg = "Submit";
           } else {
               dynamicMsg = "Update";
           }
           Swal.fire({
               title: 'Are you sure?',
               text: "You won't be able to revert this!",
               icon: 'warning',
               showCancelButton: true,
               confirmButtonColor: '#3085d6',
               cancelButtonColor: '#d33',
               confirmButtonText: 'Yes, ' + dynamicMsg +' it!'
           }).then((result) => {
               if (result.isConfirmed) {
                   $.ajax({
                       type: "POST",
                       url: "@Url.Action("SAVE_PROJECT_TENDER", "Tender")",
                       beforeSend: function (xhr) {
                           xhr.setRequestHeader("XSRF-TOKEN",
                               $('input:hidden[name="__RequestVerificationToken"]').val());
                       },
                       data: formData,
                       contentType: false,
                       processData: false,
                       dataType: "json",
                       success: function (result) {
                           Swal.fire({
                               icon: result.sucess ? 'success' : 'error',
                               title: result.responseText,
                               text: result.responseMessage,
                           }).then((result) => {
                               if (result.isConfirmed) {
                                   location.href = "@Url.Action("NewTenderView", "Tender")";
                               }
                           })
                       },
                       error: function (result) {
                           Swal.fire({
                               icon: reset.responseText,
                               title: result.responseText,
                               text: result.responseMessage,
                           });
                       },
                   });

               }
               return false;
           })

       }
    }
    function Get_Project_Tender() {
        debugger
        $.ajax({
            type: 'Get',
            dataType: 'Json',
            contentType: 'application/json; charset=utf-8',
            data: {},
            url: "@Url.Action("Get_M_Project_Tender", "Tender")",
            success: function (result) {
                debugger
                var data1 = JSON.parse(result);

                if (data1.length > 0) {
                    $('#tabledata tbody').empty();
                    $.each(data1, function (i, data) {
                        var trows = "<tr>";

                        // Column 1: Serial Number
                        trows += "<td>" + (i + 1) + "</td>";

                        // Column 2: Downloadable Document
                        trows += "<td>";
                        trows += "<div class='table__body__text'>";
                        trows += "<div class='row'>";
                        trows += "<div class='col-xl-6 col-6 d-flex column-gap-4 mb-2'>";
                        trows += "<a href='#' class='fw-600 text-primary' title='Download Document'>" + data.projectCode + "</a>";
                        trows += "</div>";
                        trows += "<div class='col-xl-6 col-6 text-start text-xl-end'>";
                        trows += "<small class='text-secondary me-2'> Amount: </small> ₹ " + data.projectAmount + "</div>";
                        trows += "<p>" + data.projectName + "</p>";
                        trows += "</div>";

                        // Construction Details
                        trows += "<div class='row'>";
                        trows += "<div class='col-xl-6 col-lg-6 col-md-6 col-6 border-end'>";
                        trows += "<div class='d-block'><small class='text-secondary'> Construction Area (Sq. Mtr)</small>";
                        trows += "<p class='m-0'>" + data.constructionArea + "</p></div></div>";

                        trows += "<div class='col-xl-6 col-lg-6 col-md-6 col-6 ps-3'>";
                        trows += "<div class='d-block'><small class='text-secondary'> Length (Mtr.) </small>";
                        trows += "<p class='m-0'>" + data.length + "</p></div></div>";
                        trows += "</div></div></td>";

                        // Column 3: Dates
                        trows += "<td><div class='row'>";
                        trows += "<div class='col-xl-6 col-lg-6 col-md-6 col-6 border-end'><small class='text-secondary'> Opening </small>";
                        trows += "<p class='m-0'>" + data.openingDate + "</p></div>";

                        trows += "<div class='col-xl-6 col-lg-6 col-md-6 col-6'><small class='text-secondary'> Last Submission </small>";
                        trows += "<p class='m-0'>" + data.submissionDate + "</p></div>";

                        trows += "<div class='col-xl-12 col-lg-12 col-md-12 col-12 mt-4'><small class='text-secondary'> NIT Document: </small>";
                        trows += "<a href='DownloadPdf?fileName=" + data.nitDocFileName + "' title='Download' data-bs-toggle='tooltip'>";
                        trows += "<i class='bi bi-file-earmark-pdf ms-2 text-danger'></i></a></div></div></td>";

                        // Column 4: Corrigendum Details
                        trows += "<td><div class='text-center'>";
                        trows += "<a href='#' class='fw-600 text-primary mb-2 d-block' title='View' data-bs-toggle='modal' data-bs-target='#viewCorrigendum'>" + data.corrigendumCount + "</a>";
                        trows += "<button type='button' class='btn btn-outline-primary btn-sm' onclick='GetProjectDetails(" + data.projectId + "," + data.tenderId + ",\"AddCor\")' title='Add' data-bs-toggle='modal' data-bs-target='#addCorrigendum'>";
                        trows += "<i class='bi bi-plus-circle me-1'></i> Add</button></div></td>";

                        // Column 5: addendum Details
                        trows += "<td><div class='text-center'>";
                        trows += "<a href='#' class='fw-600 text-primary mb-2 d-block' title='View' data-bs-toggle='modal' data-bs-target='#viewCorrigendum'>" + data.addendumCount + "</a>";
                        trows += "<button type='button' class='btn btn-outline-primary btn-sm' onclick='GetProjectDetails(" + data.projectId + "," + data.tenderId + ",\"Addendum\")' title='Add' data-bs-toggle='modal' data-bs-target='#addCorrigendum'>";
                        trows += "<i class='bi bi-plus-circle me-1'></i> Add</button></div></td>";

                        // Column 6: Status
                        trows += "<td><div class='badge " + (data.status === 'Pending' ? 'badge-warning' : 'badge-danger') + "'>" + data.status + "</div>";
                        trows += "<small class='text-secondary d-block mt-2'>" + data.statusDescription + "</small></td>";

                        // Column 7: Actions (View, Edit, Delete)
                        trows += "<td><div class='table__icon'>";
                        trows += "<a href='@Url.Action("NewTenderDetails","Tender")?tenderid=" + data.tenderId +"' title='View' data-bs-toggle='tooltip'>";
                        trows += "<i class='buidcoicon-eye text-success'></i></a>";
                        trows += "<a class='text-primary' href='#' onclick='Get_Project_tenderById(" + data.tenderId + ")' title='Edit' data-bs-toggle='tooltip'>";
                        trows += "<i class='buidcoicon-edit'></i></a>";
                        trows += "<a href='#' onclick='Delete_Project_Tender(" + data.tenderId + ")' title='Delete' data-bs-toggle='tooltip'>";
                        trows += "<i class='buidcoicon-trash text-orange'></i></a></div></td>";

                        trows += "</tr>";

                        $('#tabledata tbody').append(trows);
                    });

                }
            },
            error: function (Message) {
                alert(Message);
            }
        });
    }
    function Get_Project_tenderById(id) {
   $.ajax({
     type: "Get",
     dataType: "json",
     url: '@Url.Action("Get_Project_TenderById", "Tender")',
     data: { "Id": id },
     success: function (Result) {
         var data1 = JSON.parse(Result);
         $("#HdnTenderId").val(data1.tenderId);
         $('#projectId').val(data1.projectName +"/"+data1.projectCode);
         $('#tenderNo').val(data1.tenderNo);
         $('#tenderSubject').val(data1.tenderSubject);
         $('#publishedDate').val(data1.publishedDate);
         $('#openingDate').val(data1.openingDate);
         $('#submissionDate').val(data1.submissionDate);
         $('#emdAmount').val(data1.emdAmount);
         $('#processingFee').val(data1.processingFee);
         $('.Nitfile').html('<a href="DownloadPdf?fileName=' + data1.nitDocFileName + '" data-bs-toggle="tooltip" title="Download"> <i class="bi bi-file-earmark-pdf ms-2 text-danger"></i> Download</a>');
         $('.hdnNITFile').val(data1.nitDocFileName);
         if (data1.projectId > 0) {
             GetProjectDetails(data1.projectId);
         }
         $("#projectId").prop("readonly", true).css("cursor", "not-allowed");

         $("#projectId").parent().removeClass('error');
         $("#projectId").removeClass("is-invalid");
         $("#projectId").addClass("is-valid");

         $("#tenderNo").parent().removeClass('error');
         $("#tenderNo").removeClass("is-invalid");
         $("#tenderNo").addClass("is-valid");

         $("#tenderSubject").parent().removeClass('error');
         $("#tenderSubject").removeClass("is-invalid");
         $("#tenderSubject").addClass("is-valid");

         $("#publishedDate").parent().removeClass('error');
         $("#publishedDate").removeClass("is-invalid");
         $("#publishedDate").addClass("is-valid");

         $("#openingDate").parent().removeClass('error');
         $("#openingDate").removeClass("is-invalid");
         $("#openingDate").addClass("is-valid");

         $("#submissionDate").parent().removeClass('error');
         $("#submissionDate").removeClass("is-invalid");
         $("#submissionDate").addClass("is-valid");

         $("#emdAmount").parent().removeClass('error');
         $("#emdAmount").removeClass("is-invalid");
         $("#emdAmount").addClass("is-valid");

         $("#processingFee").parent().removeClass('error');
         $("#processingFee").removeClass("is-invalid");
         $("#processingFee").addClass("is-valid");

         $("#AddTenderform").validate().resetForm();
         $('.LengthRemarks').trigger('blur');
         $("#addTenders").modal("show");
         $('#subaddData').text('Update');
         $('#DynamicButton').text('Cancel');
     },
     error: function (Message) {
         alert(Message);
     }
 });
    }
    function GetUserName() {
        debugger
        $.ajax({
            type: 'Get',
            dataType: 'Json',
            contentType: 'application/json; charset=utf-8',
            data: {},
            url: "@Url.Action("GetUserName", "Tender")",
            success: function (data) {
                var data1 = JSON.parse(data);
                debugger
                $('#ApprovedById').html('');
                $('#ApprovedById').append('<option value="">Select</option>');
                $.each(data1, function (ind, item) {
                    $('#ApprovedById').append('<option value="' + item.UserId + '">' + item.UserName + '</option>');
                });
            }
        });
    }
    function Delete_Project_Tender(ids) {
        debugger
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url: "@Url.Action("Delete_Project_Tender", "Tender")",
                        data: { "Id": ids },
                        success: function (response) {
                            debugger
                            console.log("Response:", response);
                            Swal.fire(
                                'Deleted!',
                                response.responseMessage,
                                response.responseText
                            ).then((result) => {
                                if (result.isConfirmed) {
                                    location.href = "@Url.Action("NewTenderView", "Tender")";
                                }
                            });
                          }

                    });
                }
                return false;
            })
    }
    function AddMoreRef() {
        if ($("#formMoreCorrigendum").valid()) {
            var rows = '';
            var cont = 1;
            let checkVal;
            $('#tblcorrendum tbody tr').each(function (index) {
                $(this).find('td:eq(0)').text(cont++);
                var RefNo = $(this).find('td:eq(1)').text();
                var DescofChange = $(this).find('td:eq(2)').text();
                var referenceNumberId = $('#referenceNumberId').val();
                if (referenceNumberId == RefNo) {
                    checkVal = 1;
                    //alert('Reference already exists!');
                    Swal.fire("", "Reference already exists!", "error")
                }
            });
            if (checkVal != 1) {
                rows += '<tr>';
                rows += '<td>' + cont++ + '</td>';
                rows += '<td>' + $("#referenceNumberId").val() + '</td>';
                rows += '<td>' + $("#descchangeId").val() + '</td>';
                rows += '<td><a href="#!" class="delete" data-bs-toggle="tooltip" aria-label="Delete" data-bs-original-title="Delete"><i class="buidcoicon-delete text-danger"></i ></a ></td>'
                rows += '</tr>';
                $('#tblcorrendum tbody').append(rows);
                $('#tblcorrendum').show();
                $("#referenceNumberId").val('');
                $('#descchangeId').val('');

                $("#formMoreCorrigendum").validate().resetForm();
                $("#formMoreCorrigendum").find(".is-valid, .is-invalid").removeClass("is-valid is-invalid");
                $("#formMoreCorrigendum").find(".error").removeClass("error");
                $("#formMoreCorrigendum")[0].reset();
            }
        }
    }
    $(document).on("click", '.delete', function () {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, Remove it!'
        }).then((submit) => {
                if (submit) {
                    $(this).parents('tr').remove();
                    $('#tblcorrendum tbody tr').each(function (i) {
                        $($(this).find('td')[0]).html(i + 1);
                    });
                    if ($('#tblcorrendum tbody tr').length == 0) {
                        $("#tblcorrendum").hide();
                        $("#referenceNumberId").val('');
                        $('#descchangeId').val('');
                    }
                }
            });
    });
    function Save_PROJECT_TENDER_CORRIGENDUM() {
        if ($("#formCorrigendum_Addendum").valid()) {
            var tbody = $("#tblcorrendum tbody");
            if (tbody.children().length != 0) {
                var correndumList = '';
                $('#tblcorrendum tbody tr').each(function (index) {
                    var referenceNo = $(this).find('td:eq(1)').text();
                    var Desc = $(this).find('td:eq(2)').text();
                    correndumList += referenceNo + '|' + Desc + '^';
                });
                if (correndumList != '') {
                    $('#hdncorrendum_List').val(correndumList);
                }

                let CorreigendumTypeId = $("input[name='corrigendumType']:checked").val();
                var formData = new FormData();
                var fileInput = $("#corrigendumFileName")[0].files[0];
                formData.append("tenderId", $('#hdntenderId').val());
                formData.append("projectId", $('#hdnProjectId').val() || 0);
                formData.append("approveBy", $('#ApprovedById').val() || 0);
                formData.append("corrigendumType", CorreigendumTypeId);
                formData.append("corrigendumDate", $("#corriGendum").val());
                formData.append("CorrigendumList", $("#hdncorrendum_List").val());
                if (fileInput) {
                    formData.append("corrigendumIfromFile", fileInput);
                }
                var projecttypeId = $('#hdnprojecttypeId').val() || 0;
                let dynamicMsg;
                if (projecttypeId == 0) {
                    dynamicMsg = "Save";
                } else {
                    dynamicMsg = "Update";
                }
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, ' + dynamicMsg + ' it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("Save_PROJECT_TENDER_CORRIGENDUM", "Tender")",
                            beforeSend: function (xhr) {
                                xhr.setRequestHeader("XSRF-TOKEN",
                                    $('input:hidden[name="__RequestVerificationToken"]').val());
                            },
                            data: formData,
                            contentType: false,
                            processData: false,
                            dataType: "json",
                            success: function (result) {
                                Swal.fire({
                                    icon: result.sucess ? 'success' : 'error',
                                    title: result.responseText,
                                    text: result.responseMessage,
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        location.href = "@Url.Action("NewTenderView", "Tender")";
                                    }
                                })
                            },
                            error: function (result) {
                                Swal.fire({
                                    icon: result.responseText,
                                    title: result.responseText,
                                    text: result.responseMessage,
                                });
                            },
                        });

                    }
                    return false;
                })
            }else{
                Swal.fire("Warning!", "Please add at least one Reference No. or NIT No.", "warning");

            }
        }
    }
</script>
