﻿@{
ViewData["Title"] = "Add Project";


}

@Html.AntiForgeryToken()
<div class="page-body">
    <!-- breadcrumb section -->
    <div class="d-flex align-items-center justify-content-between mb-4 flex-wrap gap-3">
        <nav aria-label="breadcrumb">
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="#!" title="Home"><i class="bi bi-house"></i></a></li>
                <li class="breadcrumb-item"><a href="#!" title="Home"> Create Project </a></li>
                <li class="breadcrumb-item active" title="Add Project" aria-current="page"> Add Project </li>
            </ul>
        </nav>
        <div class="col-right">
            <button type="button" class="btn btn-default btn-sm" title="Back" onclick="window.location='CreateProjectView'">
                <i class="bi bi-arrow-left me-1"></i> Back
            </button>
            <button type="button" class="btn btn-primary btn-sm" title="Filter" data-bs-toggle="modal"
                    data-bs-target="#searchFilter">
                <i class="buidcoicon-filter"></i>
            </button>
           
        </div>
    </div>
    <!-- breadcrumb section -->
    <!-- inner body section -->
    <div class="body__content">
        <div class="body__bg ">
            <div class="row">
                <div class="col-xxl-4 col-xl-4 col-lg-5 col-md-12 col-12 mb-3">
                    <div class="card h-100">
                        <div class="card-body">
                            <form id="formCreate" autocomplete="off">
                                <div class="row mb-3">
                                    <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-12">
                                        <label for="letterNoId"> Letter No. </label>
                                        <input type="hidden" id="hiddenProjectId" value="@ViewBag.projectId" />
                                        <input type="hidden" id="hiddenProposalId" value="0" />
                                        <input type="hidden" id="hiddenLetterNo" value="0" />
                                        <input type="hidden" id="hdnEstimatedAmount" value="0" />
                                        <input type="hidden" id="hdnRevisedAmount" value="0" />
                                        <input type="hidden" id="hdnRevisedDocumentUpload" value="" />
                                        <input type="hidden" id="hdnRevisedRemarks" value="" />
                                        <div class="form-group">
                                            <select class="form-select" name="letterNoId" id="letterNoId">
                                                <option selected=""> Select </option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="or__separator"> Or  </div>
                                </div>
                                <div class="row">
                                    <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-12">
                                        <label for="proposalSubjectId"> Proposal Subject </label>
                                        <div class="form-group">
                                            <select class="form-select" name="proposalSubjectId" id="proposalSubjectId">
                                                <option selected=""> Select </option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-12">
                                        <label for="txtNameOfWork"> Name of Work/Project </label>
                                        <div class="form-group">
                                            <textarea class="form-control LengthRemarks" rows="5" id="txtNameOfWork" name="txtNameOfWork" onchange="RemoveWhiteSpace(this);" onkeypress="lettersDigitValidateRemarks(event)" maxlength="500" targetid="MaxSize1"></textarea>
                                            <small class="text-danger text-end mt-2 d-block fs-8"> Maximum <span id="txtchar"><strong id="MaxSize1">500</strong></span> Charecters Allowed </small>
                                        </div>
                                    </div>
                                    <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-12">
                                        <label for="txtEstimatedAmount"> Amount </label>
                                        <div class="form-group">
                                            <div class="input-group mb-3">
                                                <input type="text" class="form-control decimal-input" id="txtEstimatedAmount" name="txtEstimatedAmount" maxlength="20">
                                                <a href="#" title="Revise Amount" class="input-group-text" data-bs-toggle="modal" data-bs-target="#reviseAmount">
                                                    <i class="buidcoicon-edit text-primary"></i>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-4 col-12">
                                        <label for="txtAreaofConstruction"> Area of Construction (Sq.Mtr.) </label>
                                        <div class="form-group">
                                            <input type="text" class="form-control decimal-input" id="txtAreaofConstruction" name="txtAreaofConstruction" maxlength="20">
                                        </div>
                                    </div>
                                    <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-4 col-12">
                                        <label for="txtLength"> Length (Mtr.) </label>
                                        <div class="form-group">
                                            <input type="text" class="form-control decimal-input" id="txtLength" name="txtLength" maxlength="10">
                                        </div>
                                    </div>
                                    <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-4 col-12 mt-3 lg__btn">
                                        <button type="button" class="btn btn-light-danger me-3" onclick="window.location.href='@Url.Action("CreateProjectView", "CreateProject")'">Cancel</button>
                                        <button type="button" class="btn btn-primary" onclick="SaveProjectDetails();" id="addProject"> Submit </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-xxl-8 col-xl-8 col-lg-7 col-md-12 col-12  mb-0 mb-xl-3 mb-lg-3 mb-md-3">
                    <div class="card h-100 table__body__text">
                        <div class="card-body">
                            <div class="select__letter">
                                <div class="content text-center">
                                    <img src="~/images/file-searching.png" class="img-fluid w-25" alt="search document">
                                    <p>  select letter number to <span class="d-block"> view project proposal details </span>  </p>
                                </div>
                            </div>

                             @*</div>*@
                            <div class="Letter_Details">
                                <h4 class="mb-4"> Letter Details  </h4>
                                <div class="row">
                                    <div class="col-xl-12 col-lg-12 col-md-12 col-12">
                                        <div class="row">
                                            <div class="col-xxl-9 col-xl-9 col-lg-9 col-md-8 col-12 d-flex align-items-center column-gap-4 mb-3 flex-wrap">
                                                <div class="badge bg-yellow fw-600">
                                                    <span class="text-solid-black letterNo">  </span>
                                                </div>
                                                <div><i class="text-light-primary buidcoicon-calendar-day me-2"></i> <span class="letterDate">  </span> </div>
                                            </div>
                                            <div class="col-xxl-3 col-xl-3 col-lg-3 col-md-4 col-12 text-end mb-3">
                                                 @*<span class="badge badge-primary"> Namami Gange </span>*@
                                            </div>
                                        </div>
                                        <p>
                                            <span class="letterSubject"> </span>
                                        </p>
                                        <div class="d-block">
                                            <a href="#" class="description">  <i class="bi bi-file-earmark-pdf text-danger me-2"></i> design.pdf </a>
                                           
                                        </div>
                                    </div>
                                </div>
                                <div class="border-bottom mb-4 border-bottom pb-4"></div>
                                <h4 class="mb-4"> Proposal Details  </h4>
                                <div class="row mt-3">
                                    <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">  Location  </label>
                                        <div class="proposalLocation">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">  Area of Construction (Sq.Mtr.) </label>
                                        <div class="areaOfConstruction">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">  Length (Mtr.) </label>
                                        <div class="lengthinMT">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">  Proposal Submitted By  </label>
                                        <div class="proposalSubmittedBy">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">  Created By  </label>
                                        <div class="createdBy">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">  Created  </label>
                                        <div class="createdOn">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">  Sanction By </label>
                                        <div class="sanctionBy">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1"> Execution Mode </label>
                                        <div class="executionMode">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1"> Amount </label>
                                        <div class="amount">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">  Estimated Amount  </label>
                                        <div class="estimatedAmount">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">   TA Letter  </label>
                                        <div class="d-block">
                                           <a href="#" class="description" id="fileTADownload" target="_blank">  <i class="bi bi-file-earmark-pdf me-1 text-danger"> </i> Document.pdf </a>
                                            

                                            @*<a href="DownloadPdf?fileName='+'" id="fileTADownload" title="Download" data-bs-toggle="tooltip">TA Letter</a>*@

                                               
</div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">  Approved Amount  </label>
                                        <div class="approvedAmount">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">  AA Letter  </label>
                                        <div class="d-block">
                                            <a href="#" class="description" id="fileAADownload" target="_blank">  <i class="bi bi-file-earmark-pdf me-1 text-danger"> </i> Document.pdf </a>
                                          
                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">  Sanction Amount  </label>
                                        <div class="sanctionedAmount">

                                        </div>
                                    </div>
                                    <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-12 mb-3 mb-xl-4 mb-lg-4 mb-md-4">
                                        <label class="mb-1">   TS Letter  </label>
                                        <div class="d-block">
                                            <a href="#" class="description" id="fileTSDownload" target="_blank">  <i class="bi bi-file-earmark-pdf me-1 text-danger"> </i> Document.pdf </a>
                                           
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- inner body section -->
        <!-- revise amount Modal -->
        <div class="modal fade right custom-view-modal-medium" id="reviseAmount" tabindex="-1">
            <div class="modal-dialog modal-md custom-modal modal-dialog-scrollable">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">  Revise Amount </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="formRevise" autocomplete="off">
                            <div class="row">
                                <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-12">
                                    <label> Estimated Amount </label>
                                    <div class="form-group">
                                        <input type="text" id="txtReviseEstimatedAmount" name="txtReviseEstimatedAmount" class="form-control" readonly>
                                    </div>
                                </div>
                                <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-12">
                                    <label> Revised Amount </label>
                                    <div class="form-group">
                                        <input type="text" id="txtReviseRevisedAmount" name="txtReviseRevisedAmount" class="form-control decimal-input">
                                    </div>
                                </div>
                                <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-12">
                                    <label>  Document <span class="text-danger"> * </span> </label>
                                    <div class="form-group">
                                        <div class="custom__fileupload">
                                            <input type="file" id="fileReviseDocument" name="fileReviseDocument" class="form-control file">
                                            <label class="custom-file-label" for="">  <span> Browse  </span> </label>
                                        </div>
                                        <small class="text-danger text-end mt-2 d-block fs-8"> (.pdf file only and max. file size upto 10 MB) </small>
                                    </div>
                                </div>
                                <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-12">
                                    <label> Remark <span class="text-danger"> * </span> </label>
                                    <div class="form-group">
                                        <textarea class="form-control LengthRemarks" onchange="RemoveWhiteSpace(this);" onkeypress="lettersDigitValidateRemarks(event)" maxlength="250" id="txtReviseRemarks" name="txtReviseRemarks" rows="4" targetid="MaxSize"></textarea>
                                        <small class="text-danger text-end mt-2 d-block fs-8"> Maximum <span id="txtchar"><strong id="MaxSize">250</strong></span> Charecters Allowed </small>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer lg__btn  justify-content-start">
                        <button type="button" class="btn btn-light-danger me-3" id="btnReviseReset" onclick="ResetRevise();"> Reset </button>
                        <button type="button" class="btn btn-primary" id="btnReviseSubmit" onclick="ValidateReviseForm();"> Submit </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- revise amount Modal -->
        <!-- search filter Modal -->
        <div class="modal fade right custom-view-modal-medium" id="searchFilter" tabindex="-1">
            <div class="modal-dialog modal-lg custom-modal modal-dialog-scrollable">


@Html.Partial("~/Views/Home/_SearchFilter.cshtml")
</div>
</div>
<!-- search filter Modal -->





</div>
</div>
<script>
    //document.getElementById('addProject').addEventListener('click', function () {
    //    Swal.fire({
    //        icon: 'success',
    //        title: 'Project Added Succesfully',
    //        text: '',
    //        confirmButtonText: 'Back to Home'
    //    });
    //});

    $(document).ready(function () {

        if ($("#hiddenProjectId").val() > 0) {
            $("#addProject").text('Update');
            GetSubmittedProjectDetails();
            
        }
        $("#addProject").prop("disabled", true);
        BindLetterNoAndSubject();
        if ($("#letterNoId").val() == 'Select' && $("#proposalSubjectId").val() == 'Select') {
            $(".select__letter").show();
            $(".Letter_Details").hide();
        }
        else {
            $(".select__letter").hide();
            $(".Letter_Details").show();
        }

        $("#letterNoId").change(function () {
            var selectedValue = $(this).val(); // Get selected value
            // Get selected value
            $("#proposalSubjectId").val("");
            $("#hiddenProposalId").val(selectedValue);
            if (selectedValue != '') {
                GetProposalDetails(selectedValue);
            }
            else {
                $("#addProject").prop("disabled", true);
                $(".select__letter").show();
                $(".Letter_Details").hide();

                $('#txtNameOfWork').val('');
                $('#txtEstimatedAmount').val('');
                $('#txtAreaofConstruction').val('');
                $('#txtLength').val(''                                                                                                                                                                                                                                                      );
            }
        });
        $("#proposalSubjectId").change(function () {
            var selectedValue = $(this).val(); // Get selected value
            $("#letterNoId").val("");
            $("#hiddenProposalId").val(selectedValue);
            if (selectedValue != '') {
                GetProposalDetails(selectedValue);
            }
            else {
                $("#addProject").prop("disabled", true);
            }
        });

        $("#formCreate").validate({
            rules: {

                txtNameOfWork: {
                    required: true
                },
                txtEstimatedAmount: {
                    required: true
                },

                //txtAreaofConstruction: {
                //    required: true
                //},
                //txtLength: {
                //    required: true
                //},
            },
            messages: {

                txtNameOfWork: {
                    required: "Please enter Name of Work/Project"
                },
                txtEstimatedAmount: {
                    required: "Please enter Amount"
                },
                //txtAreaofConstruction: {
                //    required: "Please enter Area of Construction"
                //},
                //txtLength: {
                //    required: "Please enter Length"
                //},
            },
            errorPlacement: function (error, element) {
                error.css("color", "red");
                error.insertAfter(element);
            },
            highlight: function (element) {
                $(element).removeClass("is-valid");
                $(element).parent().addClass('error');
                $(element).addClass("is-invalid");
            },
            unhighlight: function (element) {
                $(element).parent().removeClass('error');
                $(element).removeClass("is-invalid");
                $(element).addClass("is-valid");
            }
        });

        $("#formRevise").validate({
            rules: {

                txtReviseRevisedAmount: {
                    required: true
                },
                fileReviseDocument: {
                    required: true
                },
                txtReviseRemarks: {
                    required: true
                },

            },
            messages: {

                txtReviseRevisedAmount: {
                    required: "Please enter Revised Amount"
                },
                fileReviseDocument: {
                    required: "Please Upload file"
                },
                txtReviseRemarks: {
                    required: "Please enter Remarks"
                },

            },
            errorPlacement: function (error, element) {
                error.css("color", "red");
                error.insertAfter(element);
            },
            highlight: function (element) {
                $(element).removeClass("is-valid");
                $(element).parent().addClass('error');
                $(element).addClass("is-invalid");
            },
            unhighlight: function (element) {
                $(element).parent().removeClass('error');
                $(element).removeClass("is-invalid");
                $(element).addClass("is-valid");
            }
        });

        $(document).on('keyup', '.LengthRemarks', function () {
            updateCharCount(this);
        });
        $(document).on('blur', '.LengthRemarks', function () {
            updateCharCount(this);
        });

        $('.file').bind('change', function () {
            filesize = this.files[0].size;
            var val = $(this).val().toLowerCase();
            var label = $(this).siblings('.custom-file-label');
            regex = new RegExp("(.*?)\.(pdf)$");
            if (!(regex.test(val))) {
                /* swal("", capitalizeString(".docx, .tif,.xls  type is not an allowed file type. You can use only .jpg, .jpeg, .png, .pdf types of file(s). "), "warning");*/
               // alert("Allow only .pdf file");
                Swal.fire({
                    icon: 'warning',
                    title: "Allow only .pdf file.",
                    text: "",
                })
                this.value = '';
                label.html('Choose files');
                return false;
            }
            else if (filesize > 10485760) {
                //swal("", capitalizeString("File size must less than 10 MB!"), "warning");

                Swal.fire({
                    icon: 'warning',
                    title: "File size must less than 10 MB!",
                    text: "",
                })
                this.value = '';
                label.html('Choose files');
                return false;
            }
            else {
                var fileName = $(this).val().split("\\").pop();
                $(this).next('.custom-file-label').html(fileName);
                $(this).next('.lblfilename5').html(fileName);
            }
            return false;
        });

        $(".decimal-input").on("keypress", function (event) {
            var value = $(this).val();
            var key = String.fromCharCode(event.which);
            if (!/[\d.]/.test(key) || (key === "." && value.includes("."))) {
                event.preventDefault();
                return false;
            }
            var newValue = value + key;
            if (newValue.includes(".") && newValue.split(".")[1].length > 2) {
                event.preventDefault();
                return false;
            }
        });
        $(".decimal-input").on("input", function () {
            var value = $(this).val();
            value = value.replace(/[^0-9.]/g, "");
            var parts = value.split(".");
            if (parts.length > 2) {
                value = parts[0] + "." + parts.slice(1).join("");
            }
            if (parts.length === 2) {
                value = parts[0] + "." + parts[1].substring(0, 2);
            }
            $(this).val(value);
        });
    });

    function BindLetterNoAndSubject() {
        console.log("AJAX Function Called!");

        $.ajax({
            url: '@Url.Action("BindLetterNoAndSubject", "CreateProject")',
            type: 'GET',
            dataType: 'json',
            beforeSend: function () {
                console.log("Sending request...");
            },
            success: function (data) {
                console.log("Response Data:", data);
                if (data.success == false) {
                    Swal.fire({
                        icon: data.responseText,
                        title: data.responseText,
                        text: data.responseMessage,
                    });
                }
                else {
                    if (!data || data.length === 0) {
                        swal("", "No data available.", "warning");
                        return;
                    }

                    let options = "<option value=''>Select</option>";
                    let optionsSubject = "<option value=''>Select</option>";

                    $.each(data, function (index, item) {
                        options += `<option value="${item.proposalId}">${item.letterNo}</option>`;
                        optionsSubject += `<option value="${item.proposalId}">${item.proposalSubject}</option>`;
                    });

                    $('#letterNoId').html(options);
                    $('#proposalSubjectId').html(optionsSubject);
                }
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                console.error("Response Text:", xhr.responseText);
                console.error("Status Code:", xhr.status);
                swal("", "Failed to fetch Checklist Names.", "error");
            }
        });
    }

    function GetProposalDetails(proposalId) {

        $.ajax({
            url: '@Url.Action("GetProposalDetails", "CreateProject")',
            type: 'GET',
            dataType : 'json',
            data: { "ProposalId": proposalId },
            success: function (data) {
                console.log(data);
                if (data.success == false) {
                    Swal.fire({
                        icon: data.responseText,
                        title: data.responseText,
                        text: data.responseMessage,
                    });
                }
                else {
                    $(".select__letter").hide();
                    $(".Letter_Details").show();
                    if (data != null && data != '') {
                        $('.letterNo').html(data.letterNo);
                        $('.letterDate').html(data.letterSubmittedDate);
                        $('.letterSubject').html(data.proposalSubject);
                        $('.proposalLocation').html(data.proposalLocation);
                        $('.areaOfConstruction').html(data.areaOfConstruction);
                        $('.lengthinMT').html(data.length);
                        $('.proposalSubmittedBy').html(data.proposalSubmittedBy);

                        $('.createdBy').html(data.createdBy);
                        $('.createdOn').html(data.createdOn);
                        $('.sanctionBy').html(data.sanctionBy);
                        $('.executionMode').html(data.executionMode);
                        $('.amount').html(data.amount);
                        $('.estimatedAmount').html(data.estimatedAmount);
                        $('.approvedAmount').html(data.approvedAmount);
                        $('.sanctionedAmount').html(data.sanctionedAmount);
                        //$('.letterNo').val(data.);
                        //$('.letterNo').val(data.);

                        $("#fileTADownload").attr("href", "DownloadPdf?fileName=" + data.letterDocPathTA);
                        $("#fileAADownload").attr("href", "DownloadPdf?fileName=" + data.letterDocPathAA);
                        $("#fileTSDownload").attr("href", "DownloadPdf?fileName=" + data.letterDocPathTS);

                        $('#txtNameOfWork').val(data.proposalSubject);
                        $('#txtEstimatedAmount').val(data.estimatedAmount);
                        $('#txtAreaofConstruction').val(data.areaOfConstruction);
                        $('#txtLength').val(data.length);

                        $('#txtReviseEstimatedAmount').val(data.estimatedAmount);
                        $("#hdnEstimatedAmount").val(data.estimatedAmount);
                        $("#hiddenLetterNo").val(data.letterNo);

                        $("#addProject").prop("disabled", false);

                        updateCharCount("#txtNameOfWork");
                    }
                }
            },
        error: function (result) {
            Swal.fire({
                icon: data.responseText,
                title: data.responseText,
                text: data.responseMessage,
            });
        },
        });
    }

    function GetSubmittedProjectDetails() {
        var ProjectId = $("#hiddenProjectId").val();
        $.ajax({
            url: '@Url.Action("GetSubmittedProjectDetails", "CreateProject")',
            type: 'GET',
            dataType: 'json',
            data: { "ProjectId": ProjectId },
            success: function (data) {
                console.log(data);
                if (data.success == false) {
                    Swal.fire({
                        icon: data.responseText,
                        title: data.responseText,
                        text: data.responseMessage,
                    });
                }
                else {
                    $(".select__letter").hide();
                    $(".Letter_Details").show();
                    if (data != null && data != '') {
                        $('.letterNo').html(data.proposalLetterNo);
                        $('.letterDate').html(data.proposalLetterSubmittedDate);
                        $('.letterSubject').html(data.proposalSubject);
                        $('.proposalLocation').html(data.proposalLocation);
                        $('.areaOfConstruction').html(data.proposalAreaOfConstruction);
                        $('.lengthinMT').html(data.proposalLength);
                        $('.proposalSubmittedBy').html(data.proposalSubmittedBy);

                        $('.createdBy').html(data.proposalCreatedBy);
                        $('.createdOn').html(data.proposalCreatedOn);
                        $('.sanctionBy').html(data.proposalSanctionBy);
                        $('.executionMode').html(data.executionMode);
                        $('.amount').html(data.proposalAmount);
                        $('.estimatedAmount').html(data.proposalEstimatedAmount);
                        $('.approvedAmount').html(data.proposalApprovedAmount);
                        $('.sanctionedAmount').html(data.proposalSanctionedAmount);
                        //$('.letterNo').val(data.);
                        //$('.letterNo').val(data.);

                        $("#fileTADownload").attr("href", "DownloadPdf?fileName=" + data.ProposalLetterDocPathTA);
                        $("#fileAADownload").attr("href", "DownloadPdf?fileName=" + data.ProposalLetterDocPathAA);
                        $("#fileTSDownload").attr("href", "DownloadPdf?fileName=" + data.ProposalLetterDocPathTS);

                        $('#txtNameOfWork').val(data.projectName);
                        $('#txtEstimatedAmount').val(data.projectAmount);
                        $('#txtAreaofConstruction').val(data.projectAreaOfConstruction);
                        $('#txtLength').val(data.projectLength);

                        $('#txtReviseEstimatedAmount').val(data.projectAmount);
                        $("#hdnEstimatedAmount").val(data.projectAmount);
                        $("#hiddenLetterNo").val(data.proposalLetterNo);

                        $("#addProject").prop("disabled", false);
                        $("#letterNoId").prop("disabled", false);
                        $("#proposalSubjectId").prop("disabled", false);

                        let options = "<option value=''>Select</option>";
                        options += `<option value="${data.proposalId}">${data.proposalLetterNo}</option>`;

                        let optionsSubject = "<option value=''>Select</option>";
                        optionsSubject += `<option value="${data.proposalId}">${data.proposalSubject}</option>`;

                        $('#letterNoId').html(options);
                        $('#proposalSubjectId').html(optionsSubject);

                        $("#letterNoId").val(data.proposalId);

                        $("#letterNoId").prop("disabled", true);
                        $("#proposalSubjectId").prop("disabled", true);

                        updateCharCount("#txtNameOfWork");
                    }
                }

            },
            error: function () {
                swal("", "Failed to fetch Checklist Names.", "error");
            }
    });
     }

    function updateCharCount(textArea) {
        var maxLength = $(textArea).attr("maxlength");
        var currentLength = $(textArea).val().length;
        var remaining = maxLength - currentLength;

        var spanId = $(textArea).attr("targetid");
        $('#' + spanId).text(remaining);

        if (remaining < 0) {
            alert("You have reached your maximum limit of characters allowed.");
            $(textArea).val($(textArea).val().substring(0, maxLength));
            $('#' + spanId).text(0);
        }
    }

    function ValidateReviseForm() {
        if ($("#formRevise").valid()) {
            $("#txtEstimatedAmount").val($("#txtReviseRevisedAmount").val());

            $("#hdnRevisedAmount").val($("#txtReviseRevisedAmount").val());
            $("#hdnRevisedDocumentUpload").val($("#fileReviseDocument").val());
            $("#hdnRevisedRemarks").val($("#txtReviseRemarks").val());

            $(".btn-close").click();

           // ResetRevise();
        }
    }
    function RemoveWhiteSpace(e) {
        e.value = $.trim(e.value);
    }
    function AllowAlphaNumeric(event) {
        var keyCode = event.which || event.keyCode;
        var allowedKeyCodes = [...Array(10).keys()].map(i => i + 48) // 0-9
            .concat([...Array(26).keys()].map(i => i + 65)) // A-Z
            .concat([...Array(26).keys()].map(i => i + 97)) // a-z
            .concat([58, 45, 92, 47, 32]); // ., ,, :, -, (, ), \, / space
        if (allowedKeyCodes.indexOf(keyCode) === -1) {
            event.preventDefault();
        }
    }
    function lettersDigitValidateRemarks(event) {
        var keyCode = event.which || event.keyCode;
        var allowedKeyCodes = [...Array(10).keys()].map(i => i + 48) // 0-9
            .concat([...Array(26).keys()].map(i => i + 65)) // A-Z
            .concat([...Array(26).keys()].map(i => i + 97)) // a-z
            .concat([46, 44, 58, 45, 40, 41, 92, 47, 32]); // ., ,, :, -, (, ), \, / space
        if (allowedKeyCodes.indexOf(keyCode) === -1) {
            event.preventDefault();
        }
    }
    function ResetRevise() {
        $("#formRevise").validate().resetForm();
        $("#formRevise").find(".is-valid, .is-invalid").removeClass("is-valid is-invalid");
        $("#formRevise").find(".error").removeClass("error");
        $("#formRevise")[0].reset();
        $('#txtReviseEstimatedAmount').val($("#hdnEstimatedAmount").val());
    }

   function SaveProjectDetails() {
        debugger
        if ($("#formCreate").valid()) {
            var formData = new FormData();

            // Append text fields
            formData.append("ProjectId", $('#hiddenProjectId').val() || 0);
            formData.append("ProposalId", $('#hiddenProposalId').val());
            formData.append("ProjectName", $("#txtNameOfWork").val());
            formData.append("EstimatedAmount", $("#txtEstimatedAmount").val());
            formData.append("AreaOfConstruction", $("#txtAreaofConstruction").val());
            formData.append("Length", $("#txtLength").val());
            formData.append("CreatedBy", ''); // Empty string for now
            formData.append("ReviseUpdatedAmount", $("#hdnRevisedAmount").val());
            formData.append("ReviseAmountRemarks", $("#hdnRevisedRemarks").val() || '');

            // Append file separately (only if a file is selected)
            var fileInput = $("#fileReviseDocument")[0].files[0];
            if (fileInput) {
                formData.append("fileReviseDocument", fileInput||null);
            }

            var projectId = $('#hiddenProjectId').val();
            let dynamicMsg;
            if (projectId == 0) {
                dynamicMsg = "Save";
            } else {
                dynamicMsg = "Update";
            }
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, ' + dynamicMsg + ' it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("SAVE_PROJECT_Details", "CreateProject")",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                    data: formData,
                        contentType: false,
                        processData: false,
                        success: function (result) {
                            Swal.fire({
                                icon: result.success ? 'success' : 'error',
                                title: result.responseText,
                                text: result.responseMessage,
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.href = "@Url.Action("CreateProjectView", "CreateProject")";
                                }
                            })
                        },
                        error: function (result) {
                            Swal.fire({
                                icon: reset.responseText,
                                title: result.responseText,
                                text: result.responseMessage,
                            });
                        },
                    });

                }
                return false;
            })

        }
    }




</script>
